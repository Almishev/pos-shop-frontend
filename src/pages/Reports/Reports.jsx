import { useEffect, useState, useContext } from "react";
import { exportOrdersReport, getCashierSummaries } from "../../Service/ReportService.js";
import { toast } from "react-hot-toast";
import './Reports.css';
import { AppContext } from "../../context/AppContext.jsx";

const Reports = () => {
    const { auth } = useContext(AppContext);
    const isAdmin = auth?.role === 'ADMIN';
    const [dateFrom, setDateFrom] = useState('');
    const [dateTo, setDateTo] = useState('');
    const [exporting, setExporting] = useState(false);
    const [activeTab, setActiveTab] = useState(isAdmin ? 'export' : 'cashiers');
    const [cashierLoading, setCashierLoading] = useState(false);
    const [cashierRows, setCashierRows] = useState([]);

    const handleExport = async () => {
        if (!dateFrom || !dateTo) {
            toast.error('–ú–æ–ª—è, –∏–∑–±–µ—Ä–µ—Ç–µ –Ω–∞—á–∞–ª–Ω–∞ –∏ –∫—Ä–∞–π–Ω–∞ –¥–∞—Ç–∞');
            return;
        }

        if (new Date(dateFrom) > new Date(dateTo)) {
            toast.error('–ù–∞—á–∞–ª–Ω–∞—Ç–∞ –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –ø–æ-–∫—ä—Å–Ω–∞ –æ—Ç –∫—Ä–∞–π–Ω–∞—Ç–∞');
            return;
        }

        try {
            setExporting(true);
            const response = await exportOrdersReport(dateFrom, dateTo);
            toast.success(`–û—Ç—á–µ—Ç—ä—Ç –µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω: ${response.data}`);
        } catch (error) {
            toast.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç–∞');
            console.error('Export error:', error);
        } finally {
            setExporting(false);
        }
    };

    const loadCashierSummaries = async () => {
        if (!dateFrom || !dateTo) return;
        if (new Date(dateFrom) > new Date(dateTo)) return;
        try {
            setCashierLoading(true);
            const res = await getCashierSummaries(dateFrom, dateTo);
            setCashierRows(res.data || []);
        } catch (e) {
            console.error(e);
        } finally {
            setCashierLoading(false);
        }
    };

    useEffect(() => {
        if (activeTab === 'cashiers') {
            loadCashierSummaries();
        }
    }, [activeTab, dateFrom, dateTo]);

    return (
        <div className="reports-container">
            <div className="d-flex justify-content-between align-items-center mb-4">
                <h2 className="mb-0 text-light">üìä –û—Ç—á–µ—Ç–∏</h2>
            </div>

            <div className="filters-bar text-light">
                <div className="row g-3 align-items-end m-0">
                    <div className="col-md-4">
                        <label className="form-label">–û—Ç –¥–∞—Ç–∞</label>
                        <input 
                            type="date" 
                            className="form-control" 
                            value={dateFrom} 
                            onChange={(e) => setDateFrom(e.target.value)} 
                        />
                    </div>
                    <div className="col-md-4">
                        <label className="form-label">–î–æ –¥–∞—Ç–∞</label>
                        <input 
                            type="date" 
                            className="form-control" 
                            value={dateTo} 
                            onChange={(e) => setDateTo(e.target.value)} 
                        />
                    </div>
                    <div className="col-md-4 d-flex gap-2">
                        {isAdmin && (
                            <button 
                                className="btn btn-outline-light w-50"
                                onClick={() => setActiveTab('export')}
                            >
                                –ï–∫—Å–ø–æ—Ä—Ç
                            </button>
                        )}
                        <button 
                            className="btn btn-outline-warning w-50"
                            onClick={() => setActiveTab('cashiers')}
                        >
                            –ü–æ –∫–∞—Å–∏–µ—Ä–∫–∏
                        </button>
                    </div>
                </div>
            </div>

            {isAdmin && activeTab === 'export' && (
            <div className="card bg-dark text-light">
                <div className="card-body">
                    <h5 className="card-title">üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –æ—Ç—á–µ—Ç–∏—Ç–µ</h5>
                    <div className="mb-3">
                        <button 
                            className="btn btn-primary"
                            onClick={handleExport}
                            disabled={exporting}
                        >
                            {exporting ? (
                                <>
                                    <span className="spinner-border spinner-border-sm me-2" role="status"></span>
                                    –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ...
                                </>
                            ) : (
                                <>
                                    <i className="bi bi-download me-2"></i>
                                    –ï–∫—Å–ø–æ—Ä—Ç CSV
                                </>
                            )}
                        </button>
                    </div>
                    <ul className="list-unstyled">
                        <li><i className="bi bi-check-circle text-success me-2"></i>–û—Ç—á–µ—Ç–∏—Ç–µ —Å–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞—Ç –≤ CSV —Ñ–æ—Ä–º–∞—Ç</li>
                        <li><i className="bi bi-check-circle text-success me-2"></i>–°—ä—Ö—Ä–∞–Ω—è–≤–∞—Ç —Å–µ –≤ AWS S3 bucket: <code>pos-reports-supermarket</code></li>
                        <li><i className="bi bi-check-circle text-success me-2"></i>–í–∫–ª—é—á–≤–∞—Ç –≤—Å–∏—á–∫–∏ –ø–æ—Ä—ä—á–∫–∏ –∑–∞ –∏–∑–±—Ä–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥</li>
                        <li><i className="bi bi-check-circle text-success me-2"></i>–§–∞–π–ª–æ–≤–µ—Ç–µ —Å–∞ –¥–æ—Å—Ç—ä–ø–Ω–∏ –∑–∞ –¥–∞–Ω—ä—á–Ω–∏ –∏ —Å—á–µ—Ç–æ–≤–æ–¥–Ω–∏ —Ü–µ–ª–∏</li>
                    </ul>
                </div>
            </div>
            )}

            {activeTab === 'cashiers' && (
            <div className="card bg-dark text-light">
                <div className="card-body">
                    <h5 className="card-title">üë©‚Äçüíº –û—Ç—á–µ—Ç–∏ –ø–æ –∫–∞—Å–∏–µ—Ä–∫–∏</h5>
                    {cashierLoading ? (
                        <div>–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</div>
                    ) : (
                        <div className="table-responsive">
                            <table className="table table-striped table-hover">
                                <thead className="table-dark">
                                    <tr>
                                        <th>–ö–∞—Å–∏–µ—Ä</th>
                                        <th>–ë—Ä–æ–π –ø–æ—Ä—ä—á–∫–∏</th>
                                        <th>–û–±–æ—Ä–æ—Ç</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {cashierRows.map((r, idx) => (
                                        <tr key={idx}>
                                            <td>{r.cashierUsername || '-'}</td>
                                            <td>{r.totalOrders}</td>
                                            <td>{new Intl.NumberFormat('bg-BG', {style:'currency', currency:'BGN'}).format(r.totalAmount || 0)}</td>
                                        </tr>
                                    ))}
                                    {cashierRows.length === 0 && (
                                        <tr>
                                            <td colSpan="3" className="text-center">–ù—è–º–∞ –¥–∞–Ω–Ω–∏ –∑–∞ –∏–∑–±—Ä–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥</td>
                                        </tr>
                                    )}
                                </tbody>
                            </table>
                        </div>
                    )}
                </div>
            </div>
            )}
        </div>
    );
};

export default Reports;
