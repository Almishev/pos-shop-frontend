import React, { useState } from 'react';
import { importProductsFromExcel } from '../../Service/ExcelImportService';
import toast from 'react-hot-toast';
import './ExcelImport.css';

const ExcelImport = ({ onImportComplete }) => {
    const [file, setFile] = useState(null);
    const [loading, setLoading] = useState(false);
    const [importResult, setImportResult] = useState(null);

    const handleFileChange = (e) => {
        const selectedFile = e.target.files[0];
        if (selectedFile) {
            const fileName = selectedFile.name.toLowerCase();
            const fileType = selectedFile.type;
            
            if (fileType === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||
                fileType === 'text/csv' ||
                fileType === 'application/csv' ||
                fileName.endsWith('.xlsx') ||
                fileName.endsWith('.csv')) {
                setFile(selectedFile);
                setImportResult(null);
            } else {
                toast.error('–ú–æ–ª—è –∏–∑–±–µ—Ä–µ—Ç–µ Excel (.xlsx) –∏–ª–∏ CSV —Ñ–∞–π–ª');
                setFile(null);
            }
        }
    };

    const handleImport = async () => {
        if (!file) {
            toast.error('–ú–æ–ª—è –∏–∑–±–µ—Ä–µ—Ç–µ —Ñ–∞–π–ª –∑–∞ –∏–º–ø–æ—Ä—Ç');
            return;
        }

        setLoading(true);
        try {
            const result = await importProductsFromExcel(file);
            setImportResult(result);
            
            if (result.successfulImports > 0) {
                toast.success(`–£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–∞–Ω–∏ ${result.successfulImports} –ø—Ä–æ–¥—É–∫—Ç–∞`);
                if (onImportComplete) {
                    onImportComplete();
                }
            }
            
            if (result.failedImports > 0) {
                toast.error(`${result.failedImports} –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ –±—è—Ö–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–∞–Ω–∏`);
            }
        } catch (error) {
            console.error('Import error:', error);
            toast.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏');
        } finally {
            setLoading(false);
        }
    };

    const downloadTemplate = () => {
        // Create a simple CSV template for download with proper encoding
        const templateData = [
            ['–ò–º–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è', '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è', '–ò–º–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç', '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç', '–ë–∞—Ä–∫–æ–¥', '–î–î–° —Å—Ç–∞–≤–∫–∞', '–¶–µ–Ω–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'],
            ['–ú–ª–µ—á–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏', '–ú–ª–µ—á–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∏ —è–π—Ü–∞', '–ú–ª—è–∫–æ 1–ª', '–ü—ä–ª–Ω–æ–º–∞—Å–ª–µ–Ω–æ –º–ª—è–∫–æ', '1234567890123', '0.20', '2.50', '100'],
            ['–•–ª–µ–±–Ω–∏ –∏–∑–¥–µ–ª–∏—è', '–•–ª—è–± –∏ —Ö–ª–µ–±–Ω–∏ –∏–∑–¥–µ–ª–∏—è', '–•–ª—è–± –±—è–ª', '–°–≤–µ–∂ –±—è–ª —Ö–ª—è–±', '2345678901234', '0.20', '1.20', '50']
        ];

        // Add BOM (Byte Order Mark) for UTF-8 to ensure proper encoding in Excel
        const BOM = '\uFEFF';
        const csvContent = BOM + templateData.map(row => 
            row.map(cell => `"${cell}"`).join(',')
        ).join('\n');
        
        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const link = document.createElement('a');
        const url = URL.createObjectURL(blob);
        link.setAttribute('href', url);
        link.setAttribute('download', 'template_products.csv');
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

    return (
        <div className="excel-import-container">
            <div className="card">
                <div className="card-header">
                    <h5>üìä –ò–º–ø–æ—Ä—Ç –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ –æ—Ç Excel</h5>
                </div>
                <div className="card-body">
                    <div className="mb-3">
                        <label htmlFor="excelFile" className="form-label">
                            –ò–∑–±–µ—Ä–µ—Ç–µ Excel (.xlsx) –∏–ª–∏ CSV —Ñ–∞–π–ª
                        </label>
                        <input
                            type="file"
                            className="form-control"
                            id="excelFile"
                            accept=".xlsx,.csv"
                            onChange={handleFileChange}
                        />
                        {file && (
                            <div className="mt-2">
                                <small className="text-muted">
                                    –ò–∑–±—Ä–∞–Ω —Ñ–∞–π–ª: {file.name} ({(file.size / 1024).toFixed(1)} KB)
                                </small>
                            </div>
                        )}
                    </div>

                    <div className="mb-3">
                        <button
                            className="btn btn-primary me-2"
                            onClick={handleImport}
                            disabled={!file || loading}
                        >
                            {loading ? '–ò–º–ø–æ—Ä—Ç–∏—Ä–∞–Ω–µ...' : '–ò–º–ø–æ—Ä—Ç–∏—Ä–∞–π –ø—Ä–æ–¥—É–∫—Ç–∏'}
                        </button>
                        <button
                            className="btn btn-outline-secondary"
                            onClick={downloadTemplate}
                        >
                            üì• –ò–∑—Ç–µ–≥–ª–∏ CSV —à–∞–±–ª–æ–Ω
                        </button>
                    </div>

                    {importResult && (
                        <div className="import-result">
                            <h6>–†–µ–∑—É–ª—Ç–∞—Ç –æ—Ç –∏–º–ø–æ—Ä—Ç–∞:</h6>
                            <div className="row">
                                <div className="col-md-3">
                                    <div className="stat-card">
                                        <div className="stat-number">{importResult.totalRows}</div>
                                        <div className="stat-label">–û–±—â–æ —Ä–µ–¥–æ–≤–µ</div>
                                    </div>
                                </div>
                                <div className="col-md-3">
                                    <div className="stat-card success">
                                        <div className="stat-number">{importResult.successfulImports}</div>
                                        <div className="stat-label">–£—Å–ø–µ—à–Ω–∏</div>
                                    </div>
                                </div>
                                <div className="col-md-3">
                                    <div className="stat-card error">
                                        <div className="stat-number">{importResult.failedImports}</div>
                                        <div className="stat-label">–ù–µ—É—Å–ø–µ—à–Ω–∏</div>
                                    </div>
                                </div>
                                <div className="col-md-3">
                                    <div className="stat-card">
                                        <div className="stat-number">
                                            {importResult.totalRows > 0 ? 
                                                Math.round((importResult.successfulImports / importResult.totalRows) * 100) : 0}%
                                        </div>
                                        <div className="stat-label">–£—Å–ø–µ—Ö</div>
                                    </div>
                                </div>
                            </div>

                            {importResult.errors && importResult.errors.length > 0 && (
                                <div className="mt-3">
                                    <h6 className="text-danger">–ì—Ä–µ—à–∫–∏:</h6>
                                    <ul className="error-list">
                                        {importResult.errors.map((error, index) => (
                                            <li key={index} className="text-danger">{error}</li>
                                        ))}
                                    </ul>
                                </div>
                            )}

                            {importResult.warnings && importResult.warnings.length > 0 && (
                                <div className="mt-3">
                                    <h6 className="text-warning">–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:</h6>
                                    <ul className="warning-list">
                                        {importResult.warnings.map((warning, index) => (
                                            <li key={index} className="text-warning">{warning}</li>
                                        ))}
                                    </ul>
                                </div>
                            )}
                        </div>
                    )}

                    <div className="mt-4">
                        <h6>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∑–∞ Excel/CSV —Ñ–∞–π–ª–∞:</h6>
                        <div className="instructions">
                            <p>Excel (.xlsx) –∏–ª–∏ CSV —Ñ–∞–π–ª—ä—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ —Å–ª–µ–¥–Ω–∏—Ç–µ –∫–æ–ª–æ–Ω–∏ (–≤ —Ç–æ–∑–∏ —Ä–µ–¥):</p>
                            <ol>
                                <li><strong>–ò–º–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è</strong> - –ò–º–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ (–∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ)</li>
                                <li><strong>–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è</strong> - –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ)</li>
                                <li><strong>–ò–º–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç</strong> - –ò–º–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ)</li>
                                <li><strong>–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç</strong> - –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ)</li>
                                <li><strong>–ë–∞—Ä–∫–æ–¥</strong> - –ë–∞—Ä–∫–æ–¥ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ)</li>
                                <li><strong>–î–î–° —Å—Ç–∞–≤–∫–∞</strong> - –î–î–° —Å—Ç–∞–≤–∫–∞ (0.20, 0.09, 0.00) (–æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ, –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ 0.20)</li>
                                <li><strong>–¶–µ–Ω–∞</strong> - –¶–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ)</li>
                                <li><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</strong> - –ù–∞—á–∞–ª–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —Å–∫–ª–∞–¥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ, –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ 0)</li>
                            </ol>
                            <p><strong>–ó–∞–±–µ–ª–µ–∂–∫–∞:</strong> –ü—ä—Ä–≤–∏—è—Ç —Ä–µ–¥ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –∑–∞–≥–ª–∞–≤–∏—è—Ç–∞ –Ω–∞ –∫–æ–ª–æ–Ω–∏—Ç–µ.</p>
                            <div className="alert alert-info mt-3">
                                <h6>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∑–∞ –æ—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ CSV —Ñ–∞–π–ª–∞ –≤ Excel:</h6>
                                <ol>
                                    <li><strong>–û—Ç–≤–æ—Ä–µ—Ç–µ Excel</strong></li>
                                    <li><strong>–§–∞–π–ª ‚Üí –û—Ç–≤–æ—Ä–∏</strong> (File ‚Üí Open)</li>
                                    <li><strong>–ò–∑–±–µ—Ä–µ—Ç–µ CSV —Ñ–∞–π–ª–∞</strong></li>
                                    <li><strong>–í –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞ "–¢–µ–∫—Å—Ç–æ–≤ –∏–º–ø–æ—Ä—Ç"</strong> –∏–∑–±–µ—Ä–µ—Ç–µ:
                                        <ul>
                                            <li>–ö–æ–¥–∏—Ä–∞–Ω–µ: <strong>UTF-8</strong></li>
                                            <li>–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª: <strong>–ó–∞–ø–µ—Ç–∞—è (,)</strong></li>
                                        </ul>
                                    </li>
                                    <li><strong>–ù–∞—Ç–∏—Å–Ω–µ—Ç–µ "–ì–æ—Ç–æ–≤–æ"</strong></li>
                                </ol>
                                <p><strong>–ê–ª—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ:</strong> –ú–æ–∂–µ—Ç–µ –¥–∞ –æ—Ç–≤–æ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª–∞ –¥–∏—Ä–µ–∫—Ç–Ω–æ –≤ Excel, –Ω–æ –∞–∫–æ –≤–∏–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω–Ω–∏ —Å–∏–º–≤–æ–ª–∏, –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ –≥–æ—Ä–Ω–∏—Ç–µ —Å—Ç—ä–ø–∫–∏.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ExcelImport;
